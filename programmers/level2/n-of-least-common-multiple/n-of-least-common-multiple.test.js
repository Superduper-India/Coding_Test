// 원하는 것
// n개의 숫자를 담은 배열 arr이 입력되었을 때 이 수들의 최소공배수를 반환하는 함수, solution을 완성

// 조건
// - n개의 수의 최소공배수란 입력된 n개의 수들의 배수 중 공통이 되는 가장 작은 숫자를 의미한다

// 계획
// [1,2,3]이 있을때, 1을 2로 나누어 떨어지지 않는다. 하지만 2를 곱하면 나누어 떨어진다. 다음으로 넘어간다. 2를 3으로 나누어 떨어지지 않는다. ... 3을 곱하면 나누어 떨어진다 업데이트 해준다.

const solution = (arr) => {
  const lastI = arr.length - 1;
  let i = 2;

  // 6 => 24 => 168
  // console.log((8 * 21) % 14);

  while ((arr[lastI - 1] * i) % arr[lastI]) {
    // 가장 마지막 두 숫자만을 비교해준다.
    // 연산의 결과가 0이면 반복문을 빠져나온다.
    // 0이 아니면 i를 증감하고 계속해서 반복한다.
    i++;
  }

  return arr[lastI - 1] * i;
};

test('run', () => {
  expect(solution([2, 6, 8, 14])).toBe(168);
  expect(solution([1, 2, 3])).toBe(6);
});
